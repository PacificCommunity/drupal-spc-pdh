<?php

// Usual menu tree
function loop_menu_main($menu, $menu_layout) {
  foreach ($menu as $key => $value) {
    $link_atributes = '';
    $link_classes = '';
    if (!empty($menu[$key]['#localized_options']['attributes'])){
      $link_atributes = get_menu_atributes($menu[$key]['#localized_options']['attributes']);
      $link_classes = get_menu_classes($menu[$key]['#localized_options']['attributes']);
    }
    $item_atributes = '';
    $item_classes = '';
    if (!empty($menu[$key]['#localized_options']['item_attributes'])){
      $item_atributes = get_menu_atributes($menu[$key]['#localized_options']['item_attributes']);
      $item_classes = get_menu_classes($menu[$key]['#localized_options']['attributes']);
    }
    
    if (!empty($menu[$key]['#href']) && !empty($menu[$key]['#title'])) {
      $menu_layout .= '<li class=" ' . $item_classes. ' ' . (!empty($menu[$key]['#below']) ? 'dropdown' : '') . '">';
    }

    if (!empty($menu[$key]['#href']) && !empty($menu[$key]['#title']) && empty($menu[$key]['#below'])) {
      
      $menu_layout .= '<li ' . $item_atributes . '>';
      
      $menu_layout .= '<a ' . $link_atributes . ' href="' . ($menu[$key]['#href'] == '<front>' ? '/' : url(drupal_get_path_alias($menu[$key]['#href']))) . '">' . $menu[$key]['#title'] . '</a>';
    }
    
    if (!empty($menu[$key]['#below'])) {
      $menu_layout .= '<a ' . $link_atributes . ' href="" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">' . $menu[$key]['#title'] . '<i class="fa fa-chevron-down"></i></a>';
      $menu_layout .= '<ul class="dropdown-menu">';
      $menu_layout = loop_menu_main($menu[$key]['#below'], $menu_layout);
      $menu_layout .= '</ul>';
    };

    $menu_layout .= '</li>';
  }
  return $menu_layout;
}

function create_main_menu() {
  $menu_array = menu_tree_output(menu_tree_all_data('main-menu'));
  $menu_layout = '<nav id="main-menu" class="pull-right"><ul>';
  $menu_layout = loop_menu_main($menu_array, $menu_layout);
  if (!user_is_logged_in()) {
    $menu_layout .= '<li><a href="/user/login"><span class="login-icon"></span>Login</a></li>';
  }
  $menu_layout .= '</ul></nav>';

  return $menu_layout;
}


// Old right side menu
function loop_menu_mobile($menu, $menu_layout, $counter_li=False, $parent_name=False) {
  $counter_ul = $counter_li;
  $counter_li = 1;
  foreach ($menu as $key => $value) {
    if(!empty($menu[$key]['#original_link']) && $menu[$key]['#original_link']['depth'] != 1 && $counter_li == 1) {
      $menu_layout .= '<div class="ma5-leave-bar"><span class="ma5-btn-leave"><i class="fa fa-chevron-left" aria-hidden="true"></i></span></span>' . $parent_name . '</div>';
    }
    if (!empty($menu[$key]['#href']) && !empty($menu[$key]['#title'])) {
      $menu_layout .= '<li class="' . ($menu[$key]['#original_link']['depth'] == 1 ? 'ma5-li-' . $counter_li : 'ma5-li-' . $counter_ul . '-' . $counter_li) . '">';
      $menu_layout .= '<a href="' . ($menu[$key]['#href'] == '<front>' ? '/' : url(drupal_get_path_alias($menu[$key]['#href']))) . '">' . $menu[$key]['#title'] . '</a>';
    }
    
    if (!empty($menu[$key]['#below'])) {
      $parent_name = $menu[$key]['#title'];
      $menu_layout .= '<span class="ma5-btn-enter"><i class="fa fa-chevron-right" aria-hidden="true"></i></span>';
      $menu_layout .= '<ul class="ma5-ul-' . $counter_li . '">';
      $menu_layout = loop_menu_mobile($menu[$key]['#below'], $menu_layout, $counter_li, $parent_name);
      $menu_layout .= '</ul>';
    } 
    $menu_layout .= '</li>';
    $counter_li++;
  }
  return $menu_layout;
}

function create_mobile_menu() {
  $menu_array = menu_tree_output(menu_tree_all_data('main-menu'));
  $menu_layout = '<div id="mobile-menu" class="pull-right">';
  $menu_layout .= '<button class="header-menu-btn ma5-toggle-menu" type="button"><span></span><span></span><span></span></button>';
  $menu_layout .= '<nav class="ma5-menu-mobile"><ul class="ma5-ul">';
  $menu_layout = loop_menu_mobile($menu_array, $menu_layout);
  $menu_layout .= '</ul></nav></div>';

  return $menu_layout;
}

function get_menu_atributes($atrebutes){
  
  $item_atributes = '';
  foreach($atrebutes as $attribute => $value){
    if (!empty($value)){
      if ($attribute != 'class') {
        $item_atributes .= ' ' . $attribute . '="' . $value . '" ';
      }
    }  
  }
  
  return $item_atributes;
}

function get_menu_classes($atrebutes){
  
  $item_classes = '';
  foreach($atrebutes as $attribute => $value){
    if (!empty($value)){
      if ($attribute == 'class') {
        $classes = '';
        foreach ($value as $class_value){
          if (!empty($class_value)){
            $classes .= $class_value . ' ';            
          }
        }
        $item_classes .= ' ' . $classes;
      }
    }  
  }
  
  return $item_classes;
}